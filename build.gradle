plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'com.sprint.mission'
version = '1.2-M8'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    all {
        exclude group: 'org.slf4j', module: 'slf4j-nop'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    implementation 'software.amazon.awssdk:s3:2.31.7'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'ch.qos.logback:logback-classic:1.4.14'
}

test {
    useJUnitPlatform()

    jacoco {
        destinationFile = file("$buildDir/jacoco/test-${System.currentTimeMillis()}.exec")
    }

    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    executionData fileTree(dir: "$buildDir/jacoco", include: "*.exec")

    reports {
        xml.required = true
        html.required = true
    }
}
