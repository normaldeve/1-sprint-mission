plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco' // ✅ 테스트 커버리지 측정용 JaCoCo 플러그인
}

group = 'com.sprint.mission'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

configurations {
    // lombok annotation processor 설정
    compileOnly {
        extendsFrom annotationProcessor
    }

    // SLF4J 충돌 방지: slf4j-nop 제거
    all {
        exclude group: 'org.slf4j', module: 'slf4j-nop'
    }
}

dependencies {
    // 🌐 Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // 📊 Spring Boot Admin Client
    implementation 'de.codecentric:spring-boot-admin-starter-client:3.4.5'

    // 📘 API 문서 (Spring Boot 3.x 대응)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

    // 🛢 DB 드라이버
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'

    // ✏️ Lombok & MapStruct
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    // 🧪 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 🔧 logback 명시적 추가 (SLF4J 2.x용)
    implementation 'ch.qos.logback:logback-classic:1.4.14'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // 테스트 후 커버리지 리포트 생성
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}