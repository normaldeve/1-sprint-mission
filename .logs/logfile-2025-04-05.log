25-04-05 15:23:45.526 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 15:23:46.010 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Starting UserRepositoryTest using Java 17.0.14 with PID 30472 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 15:23:46.017 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 15:23:49.125 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 15:23:49.916 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 714 ms. Found 6 JPA repository interfaces.
25-04-05 15:23:50.373 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 15:23:51.718 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:becba3fe-8aa1-47fb-8841-01cba05ffb1a;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 15:23:54.981 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 15:23:55.680 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 15:23:56.047 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 15:23:58.933 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 15:23:59.833 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@14bc9fe3']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 15:24:08.734 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 15:24:08.851 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 15:24:08.864 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 15:24:08.868 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 15:24:08.872 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 15:24:08.874 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 15:24:08.880 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 15:24:08.883 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 15:24:08.932 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 15:24:08.945 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 15:24:08.951 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 15:24:08.957 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 15:24:08.962 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 15:24:08.967 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 15:24:08.972 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 15:24:08.978 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 15:24:08.981 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 15:24:08.986 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 15:24:08.991 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 15:24:08.995 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 15:24:09.001 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 15:24:09.005 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 15:24:09.009 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 15:24:09.027 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:24:11.558 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 15:24:15.235 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Started UserRepositoryTest in 33.921 seconds (process running for 38.343)
25-04-05 15:24:18.462 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:31:05.288 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 15:31:05.686 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Starting UserRepositoryTest using Java 17.0.14 with PID 31264 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 15:31:05.688 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 15:31:08.015 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 15:31:08.755 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 678 ms. Found 6 JPA repository interfaces.
25-04-05 15:31:09.184 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 15:31:10.429 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:bb38095d-e036-4a92-8ee9-676fb2352822;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 15:31:13.668 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 15:31:14.257 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 15:31:14.617 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 15:31:17.301 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 15:31:18.084 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@b027acf']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 15:31:27.188 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 15:31:27.340 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 15:31:27.355 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 15:31:27.364 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 15:31:27.370 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 15:31:27.375 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 15:31:27.381 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 15:31:27.388 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 15:31:27.430 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 15:31:27.451 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 15:31:27.465 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 15:31:27.474 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 15:31:27.485 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 15:31:27.493 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 15:31:27.498 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 15:31:27.504 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 15:31:27.509 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 15:31:27.512 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 15:31:27.516 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 15:31:27.520 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 15:31:27.525 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 15:31:27.529 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 15:31:27.533 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 15:31:27.553 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:31:29.783 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 15:31:33.086 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Started UserRepositoryTest in 31.564 seconds (process running for 34.935)
25-04-05 15:31:35.708 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.User */insert 
    into
        users (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-04-05 15:31:35.748 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:31:35.367402600Z]
25-04-05 15:31:35.781 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [junwo@email.com]
25-04-05 15:31:35.782 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [password123!]
25-04-05 15:31:35.784 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [null]
25-04-05 15:31:35.785 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T06:31:35.367402600Z]
25-04-05 15:31:35.786 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:VARCHAR) <- [junwo]
25-04-05 15:31:35.788 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (7:UUID) <- [dbc08575-ff3e-4f5b-ba51-2e81379cba0c]
25-04-05 15:31:35.855 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.UserStatus */insert 
    into
        user_statuses (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-04-05 15:31:35.856 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:31:35.542204600Z]
25-04-05 15:31:35.857 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T06:31:35.146947600Z]
25-04-05 15:31:35.858 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:TIMESTAMP_UTC) <- [2025-04-05T06:31:35.542204600Z]
25-04-05 15:31:35.859 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [dbc08575-ff3e-4f5b-ba51-2e81379cba0c]
25-04-05 15:31:35.859 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:UUID) <- [75b25cc8-ba5e-4122-a5e6-412587f51965]
25-04-05 15:31:36.442 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:34:04.088 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 15:34:04.542 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Starting UserRepositoryTest using Java 17.0.14 with PID 4824 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 15:34:04.547 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 15:34:07.101 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 15:34:07.833 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 667 ms. Found 6 JPA repository interfaces.
25-04-05 15:34:08.262 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 15:34:09.488 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:89148a36-2d61-4cd7-8c23-bef7930d2524;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 15:34:12.700 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 15:34:13.273 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 15:34:13.627 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 15:34:16.466 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 15:34:17.331 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@401516ad']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 15:34:26.475 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 15:34:26.638 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 15:34:26.647 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 15:34:26.653 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 15:34:26.657 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 15:34:26.662 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 15:34:26.668 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 15:34:26.672 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 15:34:26.705 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 15:34:26.718 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 15:34:26.730 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 15:34:26.736 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 15:34:26.746 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 15:34:26.756 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 15:34:26.763 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 15:34:26.770 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 15:34:26.776 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 15:34:26.780 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 15:34:26.786 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 15:34:26.793 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 15:34:26.797 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 15:34:26.805 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 15:34:26.809 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 15:34:26.834 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:34:28.566 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 15:34:30.842 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Started UserRepositoryTest in 30.792 seconds (process running for 34.601)
25-04-05 15:34:32.939 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.User */insert 
    into
        users (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-04-05 15:34:32.972 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:34:32.660982700Z]
25-04-05 15:34:33.010 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [junwo@email.com]
25-04-05 15:34:33.012 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [password123!]
25-04-05 15:34:33.013 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [null]
25-04-05 15:34:33.013 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T06:34:32.660982700Z]
25-04-05 15:34:33.014 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:VARCHAR) <- [junwo]
25-04-05 15:34:33.014 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (7:UUID) <- [ab4aff70-d18d-4922-a687-3917a065ce64]
25-04-05 15:34:33.113 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.UserStatus */insert 
    into
        user_statuses (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-04-05 15:34:33.122 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:34:32.828045400Z]
25-04-05 15:34:33.124 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T06:34:32.815244300Z]
25-04-05 15:34:33.127 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:TIMESTAMP_UTC) <- [2025-04-05T06:34:32.828045400Z]
25-04-05 15:34:33.128 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [ab4aff70-d18d-4922-a687-3917a065ce64]
25-04-05 15:34:33.132 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:UUID) <- [1b726906-4656-4d79-aff8-a170321c93ed]
25-04-05 15:34:33.374 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        s1_0.id,
        s1_0.created_at,
        s1_0.last_active_at,
        s1_0.updated_at,
        s1_0.user_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        user_statuses s1_0 
            on u1_0.id=s1_0.user_id 
    where
        u1_0.id=?
25-04-05 15:34:33.391 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [ab4aff70-d18d-4922-a687-3917a065ce64]
25-04-05 15:34:34.028 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:35:50.689 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 15:35:51.118 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Starting UserRepositoryTest using Java 17.0.14 with PID 22184 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 15:35:51.122 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 15:35:53.615 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 15:35:54.308 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 621 ms. Found 6 JPA repository interfaces.
25-04-05 15:35:54.652 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 15:35:55.842 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:11f22d62-7b21-492e-944a-30383990fd46;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 15:35:58.577 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 15:35:59.092 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 15:35:59.424 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 15:36:01.576 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 15:36:02.194 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@34902fe6']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 15:36:10.983 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 15:36:11.148 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 15:36:11.166 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 15:36:11.173 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 15:36:11.179 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 15:36:11.186 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 15:36:11.193 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 15:36:11.198 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 15:36:11.240 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 15:36:11.256 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 15:36:11.267 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 15:36:11.273 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 15:36:11.282 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 15:36:11.293 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 15:36:11.303 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 15:36:11.319 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 15:36:11.326 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 15:36:11.335 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 15:36:11.341 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 15:36:11.348 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 15:36:11.357 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 15:36:11.363 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 15:36:11.372 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 15:36:11.399 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:36:13.816 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 15:36:17.323 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Started UserRepositoryTest in 30.278 seconds (process running for 33.99)
25-04-05 15:36:19.990 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.User */insert 
    into
        users (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-04-05 15:36:20.033 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:36:19.667066100Z]
25-04-05 15:36:20.069 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [junwo@email.com]
25-04-05 15:36:20.071 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [password123!]
25-04-05 15:36:20.072 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [null]
25-04-05 15:36:20.073 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T06:36:19.667066100Z]
25-04-05 15:36:20.074 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:VARCHAR) <- [junwo]
25-04-05 15:36:20.075 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (7:UUID) <- [d4d18fcd-2d4d-41b6-8e3f-3a0bd0bde625]
25-04-05 15:36:20.169 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.UserStatus */insert 
    into
        user_statuses (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-04-05 15:36:20.173 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:36:19.855411900Z]
25-04-05 15:36:20.175 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T06:36:19.839064400Z]
25-04-05 15:36:20.175 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:TIMESTAMP_UTC) <- [2025-04-05T06:36:19.855411900Z]
25-04-05 15:36:20.175 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [d4d18fcd-2d4d-41b6-8e3f-3a0bd0bde625]
25-04-05 15:36:20.175 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:UUID) <- [bf4deb4e-ecd3-49a1-8209-b61d1f6fb454]
25-04-05 15:36:20.361 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    select
        us1_0.id,
        us1_0.created_at,
        us1_0.last_active_at,
        us1_0.updated_at,
        us1_0.user_id 
    from
        user_statuses us1_0 
    where
        us1_0.id=?
25-04-05 15:36:20.372 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [bf4deb4e-ecd3-49a1-8209-b61d1f6fb454]
25-04-05 15:36:21.147 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:40:12.335 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 15:40:12.852 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Starting UserRepositoryTest using Java 17.0.14 with PID 11160 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 15:40:12.858 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 15:40:15.384 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 15:40:16.172 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 707 ms. Found 6 JPA repository interfaces.
25-04-05 15:40:16.582 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 15:40:17.824 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:9adc69ef-4119-459c-be32-82bdc5b12860;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 15:40:20.973 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 15:40:21.614 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 15:40:21.971 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 15:40:24.989 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 15:40:25.821 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@41a98737']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 15:40:35.269 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 15:40:35.443 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 15:40:35.463 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 15:40:35.472 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 15:40:35.479 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 15:40:35.486 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 15:40:35.496 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 15:40:35.506 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 15:40:35.549 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 15:40:35.561 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 15:40:35.573 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 15:40:35.579 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 15:40:35.589 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 15:40:35.596 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 15:40:35.604 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 15:40:35.616 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 15:40:35.622 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 15:40:35.632 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 15:40:35.641 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 15:40:35.650 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 15:40:35.658 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 15:40:35.667 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 15:40:35.674 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 15:40:35.695 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:40:38.048 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 15:40:41.610 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Started UserRepositoryTest in 31.957 seconds (process running for 36.324)
25-04-05 15:40:44.178 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.BinaryContent */insert 
    into
        binary_contents (content_type, created_at, file_name, size, id) 
    values
        (?, ?, ?, ?, ?)
25-04-05 15:40:44.215 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:VARCHAR) <- [.jpeg]
25-04-05 15:40:44.217 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T06:40:43.972985400Z]
25-04-05 15:40:44.247 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [userProfile]
25-04-05 15:40:44.247 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:BIGINT) <- [10]
25-04-05 15:40:44.248 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:UUID) <- [74622d7b-898f-4c00-9882-8bf3145ec8e4]
25-04-05 15:40:44.328 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.User */insert 
    into
        users (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-04-05 15:40:44.331 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:40:43.848913800Z]
25-04-05 15:40:44.332 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [test@naver.com]
25-04-05 15:40:44.333 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [testPassword12!]
25-04-05 15:40:44.335 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [74622d7b-898f-4c00-9882-8bf3145ec8e4]
25-04-05 15:40:44.336 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T06:40:43.848913800Z]
25-04-05 15:40:44.336 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:VARCHAR) <- [test]
25-04-05 15:40:44.337 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (7:UUID) <- [23a72432-2cbb-4f08-9ea4-96613a3fd7f5]
25-04-05 15:40:44.539 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    select
        bc1_0.id,
        bc1_0.content_type,
        bc1_0.created_at,
        bc1_0.file_name,
        bc1_0.size 
    from
        binary_contents bc1_0 
    where
        bc1_0.id=?
25-04-05 15:40:44.547 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [74622d7b-898f-4c00-9882-8bf3145ec8e4]
25-04-05 15:40:45.320 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:42:09.034 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 15:42:09.400 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Starting UserRepositoryTest using Java 17.0.14 with PID 22172 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 15:42:09.405 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 15:42:11.696 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 15:42:12.357 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 614 ms. Found 6 JPA repository interfaces.
25-04-05 15:42:12.756 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 15:42:13.972 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:45837d32-5636-4be3-a3a7-3b7b1ed76dd7;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 15:42:17.080 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 15:42:17.597 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 15:42:17.905 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 15:42:20.662 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 15:42:21.546 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@73eed7b0']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 15:42:30.496 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 15:42:30.653 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 15:42:30.669 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 15:42:30.675 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 15:42:30.682 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 15:42:30.689 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 15:42:30.696 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 15:42:30.702 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 15:42:30.742 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 15:42:30.760 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 15:42:30.771 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 15:42:30.779 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 15:42:30.801 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 15:42:30.809 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 15:42:30.817 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 15:42:30.824 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 15:42:30.829 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 15:42:30.834 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 15:42:30.841 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 15:42:30.849 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 15:42:30.853 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 15:42:30.857 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 15:42:30.860 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 15:42:30.883 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:42:33.025 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 15:42:36.032 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Started UserRepositoryTest in 30.745 seconds (process running for 35.376)
25-04-05 15:42:39.193 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:48:38.045 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 15:48:38.501 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Starting UserRepositoryTest using Java 17.0.14 with PID 20564 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 15:48:38.503 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 15:48:41.059 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 15:48:41.773 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 645 ms. Found 6 JPA repository interfaces.
25-04-05 15:48:42.197 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 15:48:43.440 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:b02c67ec-cbc0-4969-a443-b8508c68f30f;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 15:48:46.555 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 15:48:47.142 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 15:48:47.466 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 15:48:50.290 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 15:48:51.131 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@3026d4cd']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 15:49:00.425 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 15:49:00.579 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 15:49:00.598 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 15:49:00.606 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 15:49:00.608 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 15:49:00.614 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 15:49:00.621 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 15:49:00.627 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 15:49:00.672 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 15:49:00.689 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 15:49:00.701 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 15:49:00.708 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 15:49:00.717 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 15:49:00.727 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 15:49:00.736 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 15:49:00.748 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 15:49:00.755 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 15:49:00.763 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 15:49:00.771 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 15:49:00.780 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 15:49:00.787 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 15:49:00.796 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 15:49:00.803 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 15:49:00.829 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:49:03.129 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 15:49:06.598 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Started UserRepositoryTest in 32.174 seconds (process running for 35.741)
25-04-05 15:49:09.081 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.BinaryContent */insert 
    into
        binary_contents (content_type, created_at, file_name, size, id) 
    values
        (?, ?, ?, ?, ?)
25-04-05 15:49:09.110 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:VARCHAR) <- [.jpeg]
25-04-05 15:49:09.111 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T06:49:08.867860400Z]
25-04-05 15:49:09.138 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [userProfile]
25-04-05 15:49:09.139 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:BIGINT) <- [10]
25-04-05 15:49:09.141 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:UUID) <- [2e451293-2168-454f-865f-48518c160e01]
25-04-05 15:49:09.210 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.User */insert 
    into
        users (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-04-05 15:49:09.215 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:49:08.765076500Z]
25-04-05 15:49:09.216 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [test@naver.com]
25-04-05 15:49:09.218 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [testPassword12!]
25-04-05 15:49:09.219 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [2e451293-2168-454f-865f-48518c160e01]
25-04-05 15:49:09.221 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T06:49:08.765076500Z]
25-04-05 15:49:09.222 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:VARCHAR) <- [test]
25-04-05 15:49:09.223 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (7:UUID) <- [57d5fc42-6e53-4a42-a50c-558513db7d5d]
25-04-05 15:49:09.229 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.UserStatus */insert 
    into
        user_statuses (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-04-05 15:49:09.232 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:49:08.954476200Z]
25-04-05 15:49:09.234 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T06:49:08.939366800Z]
25-04-05 15:49:09.237 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:TIMESTAMP_UTC) <- [2025-04-05T06:49:08.954476200Z]
25-04-05 15:49:09.238 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [57d5fc42-6e53-4a42-a50c-558513db7d5d]
25-04-05 15:49:09.239 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:UUID) <- [06492695-d5a8-4a95-9a2f-d92f7b3530ac]
25-04-05 15:49:09.637 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* SELECT
        u 
    FROM
        User u 
    LEFT JOIN
        
    FETCH
        u.profile 
    JOIN
        
    FETCH
        u.status */ select
            u1_0.id,
            u1_0.created_at,
            u1_0.email,
            u1_0.password,
            p1_0.id,
            p1_0.content_type,
            p1_0.created_at,
            p1_0.file_name,
            p1_0.size,
            s1_0.id,
            s1_0.created_at,
            s1_0.last_active_at,
            s1_0.updated_at,
            s1_0.user_id,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        left join
            binary_contents p1_0 
                on p1_0.id=u1_0.profile_id 
        join
            user_statuses s1_0 
                on u1_0.id=s1_0.user_id
25-04-05 15:49:10.399 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:49:53.367 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 15:49:53.798 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Starting UserRepositoryTest using Java 17.0.14 with PID 22868 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 15:49:53.804 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 15:49:56.076 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 15:49:56.721 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 602 ms. Found 6 JPA repository interfaces.
25-04-05 15:49:57.127 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 15:49:58.295 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:2fbf0935-1fca-4a7c-bd50-3ada70d6e359;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 15:50:01.267 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 15:50:01.847 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 15:50:02.218 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 15:50:05.052 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 15:50:05.837 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@23b05e58']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 15:50:14.868 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 15:50:15.039 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 15:50:15.061 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 15:50:15.069 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 15:50:15.075 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 15:50:15.079 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 15:50:15.085 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 15:50:15.090 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 15:50:15.127 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 15:50:15.147 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 15:50:15.158 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 15:50:15.166 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 15:50:15.174 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 15:50:15.188 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 15:50:15.199 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 15:50:15.212 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 15:50:15.219 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 15:50:15.226 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 15:50:15.234 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 15:50:15.243 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 15:50:15.256 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 15:50:15.266 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 15:50:15.275 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 15:50:15.301 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:50:17.916 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 15:50:21.182 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Started UserRepositoryTest in 31.517 seconds (process running for 34.865)
25-04-05 15:50:23.869 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.BinaryContent */insert 
    into
        binary_contents (content_type, created_at, file_name, size, id) 
    values
        (?, ?, ?, ?, ?)
25-04-05 15:50:23.904 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:VARCHAR) <- [.jpeg]
25-04-05 15:50:23.907 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T06:50:23.652303800Z]
25-04-05 15:50:23.942 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [userProfile]
25-04-05 15:50:23.944 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:BIGINT) <- [10]
25-04-05 15:50:23.945 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:UUID) <- [74c700f0-dab9-444c-9041-2cb19a456ecd]
25-04-05 15:50:24.010 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.User */insert 
    into
        users (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-04-05 15:50:24.013 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:50:23.539164200Z]
25-04-05 15:50:24.015 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [test@naver.com]
25-04-05 15:50:24.016 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [testPassword12!]
25-04-05 15:50:24.017 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [74c700f0-dab9-444c-9041-2cb19a456ecd]
25-04-05 15:50:24.020 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T06:50:23.539164200Z]
25-04-05 15:50:24.022 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:VARCHAR) <- [test]
25-04-05 15:50:24.024 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (7:UUID) <- [2b76fc36-bf23-4a78-8e35-11ee5878b0f0]
25-04-05 15:50:24.028 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.UserStatus */insert 
    into
        user_statuses (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-04-05 15:50:24.031 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:50:23.740442500Z]
25-04-05 15:50:24.032 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T06:50:23.724994700Z]
25-04-05 15:50:24.034 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:TIMESTAMP_UTC) <- [2025-04-05T06:50:23.740442500Z]
25-04-05 15:50:24.035 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [2b76fc36-bf23-4a78-8e35-11ee5878b0f0]
25-04-05 15:50:24.036 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:UUID) <- [aaab693b-cacc-4cd4-8dfa-be6842082c52]
25-04-05 15:50:24.462 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* SELECT
        u 
    FROM
        User u 
    LEFT JOIN
        
    FETCH
        u.profile 
    JOIN
        
    FETCH
        u.status */ select
            u1_0.id,
            u1_0.created_at,
            u1_0.email,
            u1_0.password,
            p1_0.id,
            p1_0.content_type,
            p1_0.created_at,
            p1_0.file_name,
            p1_0.size,
            s1_0.id,
            s1_0.created_at,
            s1_0.last_active_at,
            s1_0.updated_at,
            s1_0.user_id,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        left join
            binary_contents p1_0 
                on p1_0.id=u1_0.profile_id 
        join
            user_statuses s1_0 
                on u1_0.id=s1_0.user_id
25-04-05 15:50:25.314 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:55:16.340 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 15:55:16.838 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Starting UserRepositoryTest using Java 17.0.14 with PID 29852 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 15:55:16.843 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 15:55:19.642 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 15:55:20.438 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 720 ms. Found 6 JPA repository interfaces.
25-04-05 15:55:20.808 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 15:55:22.047 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:67176f88-d49a-42d8-bd68-1b59a84684a2;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 15:55:24.985 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 15:55:25.540 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 15:55:25.738 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 15:55:28.323 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 15:55:29.160 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@2e15ad9b']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 15:55:37.662 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 15:55:37.782 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 15:55:37.800 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 15:55:37.805 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 15:55:37.808 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 15:55:37.813 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 15:55:37.817 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 15:55:37.822 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 15:55:37.867 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 15:55:37.881 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 15:55:37.895 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 15:55:37.902 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 15:55:37.913 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 15:55:37.923 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 15:55:37.931 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 15:55:37.942 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 15:55:37.949 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 15:55:37.958 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 15:55:37.968 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 15:55:37.977 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 15:55:37.986 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 15:55:37.994 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 15:55:38.003 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 15:55:38.030 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:55:40.442 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 15:55:43.913 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Started UserRepositoryTest in 31.176 seconds (process running for 35.388)
25-04-05 15:55:46.435 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.User */insert 
    into
        users (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-04-05 15:55:46.473 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:55:46.103096Z]
25-04-05 15:55:46.510 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [test@naver.com]
25-04-05 15:55:46.511 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [testPassword12!]
25-04-05 15:55:46.513 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [null]
25-04-05 15:55:46.513 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T06:55:46.103096Z]
25-04-05 15:55:46.513 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:VARCHAR) <- [test]
25-04-05 15:55:46.514 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (7:UUID) <- [ab3470a2-50a7-4b5b-bee5-d946d30c1386]
25-04-05 15:55:46.605 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.UserStatus */insert 
    into
        user_statuses (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-04-05 15:55:46.609 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:55:46.292052300Z]
25-04-05 15:55:46.610 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T06:55:46.273Z]
25-04-05 15:55:46.612 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:TIMESTAMP_UTC) <- [2025-04-05T06:55:46.292052300Z]
25-04-05 15:55:46.613 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [ab3470a2-50a7-4b5b-bee5-d946d30c1386]
25-04-05 15:55:46.615 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:UUID) <- [8da99eb6-de5a-4d18-b336-4d1ea17a3acd]
25-04-05 15:55:46.795 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        s1_0.id,
        s1_0.created_at,
        s1_0.last_active_at,
        s1_0.updated_at,
        s1_0.user_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        user_statuses s1_0 
            on u1_0.id=s1_0.user_id 
    where
        u1_0.id=?
25-04-05 15:55:46.813 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [ab3470a2-50a7-4b5b-bee5-d946d30c1386]
25-04-05 15:55:47.386 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.UserStatus */delete 
    from
        user_statuses 
    where
        id=?
25-04-05 15:55:47.390 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [8da99eb6-de5a-4d18-b336-4d1ea17a3acd]
25-04-05 15:55:47.405 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.User */delete 
    from
        users 
    where
        id=?
25-04-05 15:55:47.408 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [ab3470a2-50a7-4b5b-bee5-d946d30c1386]
25-04-05 15:55:47.421 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* <criteria> */ select
        us1_0.id,
        us1_0.created_at,
        us1_0.last_active_at,
        us1_0.updated_at,
        us1_0.user_id 
    from
        user_statuses us1_0
25-04-05 15:55:48.167 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:56:57.989 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 15:56:58.366 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Starting UserRepositoryTest using Java 17.0.14 with PID 31608 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 15:56:58.369 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 15:57:00.603 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 15:57:01.215 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 567 ms. Found 6 JPA repository interfaces.
25-04-05 15:57:01.586 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 15:57:02.736 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:89794f02-df52-46b4-9488-b8487a282849;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 15:57:05.851 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 15:57:06.334 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 15:57:06.638 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 15:57:09.197 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 15:57:09.995 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@26c8b723']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 15:57:18.523 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 15:57:18.686 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 15:57:18.704 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 15:57:18.711 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 15:57:18.717 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 15:57:18.722 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 15:57:18.730 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 15:57:18.737 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 15:57:18.781 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 15:57:18.801 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 15:57:18.813 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 15:57:18.822 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 15:57:18.835 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 15:57:18.845 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 15:57:18.856 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 15:57:18.865 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 15:57:18.871 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 15:57:18.876 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 15:57:18.881 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 15:57:18.886 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 15:57:18.889 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 15:57:18.895 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 15:57:18.898 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 15:57:18.916 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:57:20.567 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 15:57:24.056 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Started UserRepositoryTest in 29.488 seconds (process running for 32.77)
25-04-05 15:57:26.621 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.User */insert 
    into
        users (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-04-05 15:57:26.659 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:57:26.307067Z]
25-04-05 15:57:26.695 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [test@naver.com]
25-04-05 15:57:26.696 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [testPassword12!]
25-04-05 15:57:26.697 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [null]
25-04-05 15:57:26.697 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T06:57:26.307067Z]
25-04-05 15:57:26.698 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:VARCHAR) <- [test]
25-04-05 15:57:26.699 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (7:UUID) <- [61cee58a-54a8-4f35-adbf-a9b185f7ae90]
25-04-05 15:57:26.796 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.UserStatus */insert 
    into
        user_statuses (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-04-05 15:57:26.800 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:57:26.483134400Z]
25-04-05 15:57:26.803 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T06:57:26.466011100Z]
25-04-05 15:57:26.804 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:TIMESTAMP_UTC) <- [2025-04-05T06:57:26.483134400Z]
25-04-05 15:57:26.806 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [61cee58a-54a8-4f35-adbf-a9b185f7ae90]
25-04-05 15:57:26.808 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:UUID) <- [8c996c6a-0fcb-497d-bc23-4d01b774e0b1]
25-04-05 15:57:27.024 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        s1_0.id,
        s1_0.created_at,
        s1_0.last_active_at,
        s1_0.updated_at,
        s1_0.user_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        user_statuses s1_0 
            on u1_0.id=s1_0.user_id 
    where
        u1_0.id=?
25-04-05 15:57:27.036 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [61cee58a-54a8-4f35-adbf-a9b185f7ae90]
25-04-05 15:57:27.667 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.UserStatus */delete 
    from
        user_statuses 
    where
        id=?
25-04-05 15:57:27.670 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [8c996c6a-0fcb-497d-bc23-4d01b774e0b1]
25-04-05 15:57:27.680 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.User */delete 
    from
        users 
    where
        id=?
25-04-05 15:57:27.686 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [61cee58a-54a8-4f35-adbf-a9b185f7ae90]
25-04-05 15:57:27.691 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* <criteria> */ select
        us1_0.id,
        us1_0.created_at,
        us1_0.last_active_at,
        us1_0.updated_at,
        us1_0.user_id 
    from
        user_statuses us1_0
25-04-05 15:57:28.261 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:58:26.690 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 15:58:27.080 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Starting UserRepositoryTest using Java 17.0.14 with PID 24676 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 15:58:27.082 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 15:58:29.603 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 15:58:30.309 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 640 ms. Found 6 JPA repository interfaces.
25-04-05 15:58:30.719 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 15:58:32.003 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:93252d8b-1c35-48bc-9e2a-8a533e91f844;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 15:58:34.805 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 15:58:35.344 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 15:58:35.716 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 15:58:38.353 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 15:58:39.198 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@21e67d8d']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 15:59:06.655 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 15:59:07.087 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Starting UserRepositoryTest using Java 17.0.14 with PID 18292 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 15:59:07.092 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 15:59:09.554 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 15:59:10.346 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 716 ms. Found 6 JPA repository interfaces.
25-04-05 15:59:10.697 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 15:59:11.862 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:04e95989-4d3a-4a1b-b9e7-4d030c766c52;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 15:59:14.935 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 15:59:15.539 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 15:59:15.883 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 15:59:18.582 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 15:59:19.473 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@688c1b2a']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 15:59:28.622 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 15:59:28.738 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 15:59:28.751 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 15:59:28.757 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 15:59:28.761 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 15:59:28.768 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 15:59:28.773 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 15:59:28.777 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 15:59:28.815 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 15:59:28.829 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 15:59:28.842 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 15:59:28.848 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 15:59:28.858 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 15:59:28.867 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 15:59:28.876 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 15:59:28.888 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 15:59:28.895 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 15:59:28.903 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 15:59:28.910 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 15:59:28.917 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 15:59:28.925 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 15:59:28.933 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 15:59:28.939 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 15:59:28.965 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 15:59:31.535 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 15:59:35.088 [Test worker] INFO  com.sprint.mission.discodeit.repository.UserRepositoryTest [ |  | ] - Started UserRepositoryTest in 32.181 seconds (process running for 35.311)
25-04-05 15:59:37.675 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.BinaryContent */insert 
    into
        binary_contents (content_type, created_at, file_name, size, id) 
    values
        (?, ?, ?, ?, ?)
25-04-05 15:59:37.711 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:VARCHAR) <- [.jpeg]
25-04-05 15:59:37.712 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T06:59:37.438424700Z]
25-04-05 15:59:37.748 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [userProfile]
25-04-05 15:59:37.748 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:BIGINT) <- [10]
25-04-05 15:59:37.751 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:UUID) <- [b694fc35-b828-4191-bbcc-dbea39b9d2a0]
25-04-05 15:59:37.838 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.User */insert 
    into
        users (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-04-05 15:59:37.843 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:59:37.315021600Z]
25-04-05 15:59:37.844 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [test@naver.com]
25-04-05 15:59:37.845 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [testPassword12!]
25-04-05 15:59:37.847 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [b694fc35-b828-4191-bbcc-dbea39b9d2a0]
25-04-05 15:59:37.850 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T06:59:37.315021600Z]
25-04-05 15:59:37.852 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:VARCHAR) <- [test]
25-04-05 15:59:37.853 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (7:UUID) <- [c4cdaca7-7306-45a5-aa2b-d9785a46f076]
25-04-05 15:59:37.857 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.UserStatus */insert 
    into
        user_statuses (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-04-05 15:59:37.860 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:59:37.536333800Z]
25-04-05 15:59:37.861 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T06:59:37.520979200Z]
25-04-05 15:59:37.862 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:TIMESTAMP_UTC) <- [2025-04-05T06:59:37.536333800Z]
25-04-05 15:59:37.864 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [c4cdaca7-7306-45a5-aa2b-d9785a46f076]
25-04-05 15:59:37.866 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:UUID) <- [e10e7c42-ac14-4ed1-a37d-18e81cf00404]
25-04-05 15:59:38.297 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* SELECT
        u 
    FROM
        User u 
    LEFT JOIN
        
    FETCH
        u.profile 
    JOIN
        
    FETCH
        u.status */ select
            u1_0.id,
            u1_0.created_at,
            u1_0.email,
            u1_0.password,
            p1_0.id,
            p1_0.content_type,
            p1_0.created_at,
            p1_0.file_name,
            p1_0.size,
            s1_0.id,
            s1_0.created_at,
            s1_0.last_active_at,
            s1_0.updated_at,
            s1_0.user_id,
            u1_0.updated_at,
            u1_0.username 
        from
            users u1_0 
        left join
            binary_contents p1_0 
                on p1_0.id=u1_0.profile_id 
        join
            user_statuses s1_0 
                on u1_0.id=s1_0.user_id
25-04-05 15:59:39.120 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.User */insert 
    into
        users (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-04-05 15:59:39.124 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:59:38.999782600Z]
25-04-05 15:59:39.127 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [junwo@email.com]
25-04-05 15:59:39.128 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [password123!]
25-04-05 15:59:39.129 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [null]
25-04-05 15:59:39.130 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T06:59:38.999782600Z]
25-04-05 15:59:39.130 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:VARCHAR) <- [junwo]
25-04-05 15:59:39.131 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (7:UUID) <- [de238411-fb5c-4fd9-a4dc-3b333b344fcd]
25-04-05 15:59:39.138 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-04-05 15:59:39.142 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:VARCHAR) <- [junwo]
25-04-05 15:59:39.142 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:INTEGER) <- [1]
25-04-05 15:59:39.182 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.User */insert 
    into
        users (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-04-05 15:59:39.186 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:59:39.175435200Z]
25-04-05 15:59:39.188 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [junwo@email.com]
25-04-05 15:59:39.189 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [password123!]
25-04-05 15:59:39.190 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [null]
25-04-05 15:59:39.191 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T06:59:39.175435200Z]
25-04-05 15:59:39.192 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:VARCHAR) <- [junwo]
25-04-05 15:59:39.193 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (7:UUID) <- [7b924aed-d3ba-47bc-a27f-5a2230811dbc]
25-04-05 15:59:39.198 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-04-05 15:59:39.201 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:VARCHAR) <- [junwo@email.com]
25-04-05 15:59:39.202 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:INTEGER) <- [1]
25-04-05 15:59:39.225 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.User */insert 
    into
        users (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-04-05 15:59:39.228 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:59:39.223194700Z]
25-04-05 15:59:39.228 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [test@naver.com]
25-04-05 15:59:39.229 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [testPassword12!]
25-04-05 15:59:39.229 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [null]
25-04-05 15:59:39.229 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T06:59:39.223194700Z]
25-04-05 15:59:39.230 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:VARCHAR) <- [test]
25-04-05 15:59:39.230 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (7:UUID) <- [6c8e4ed4-6884-4a6b-a3b4-e42db33c40f2]
25-04-05 15:59:39.279 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        s1_0.id,
        s1_0.created_at,
        s1_0.last_active_at,
        s1_0.updated_at,
        s1_0.user_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        user_statuses s1_0 
            on u1_0.id=s1_0.user_id 
    where
        u1_0.id=?
25-04-05 15:59:39.284 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [6c8e4ed4-6884-4a6b-a3b4-e42db33c40f2]
25-04-05 15:59:39.329 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.User */insert 
    into
        users (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-04-05 15:59:39.331 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:59:39.324707500Z]
25-04-05 15:59:39.332 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [test@naver.com]
25-04-05 15:59:39.333 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [testPassword12!]
25-04-05 15:59:39.336 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [null]
25-04-05 15:59:39.337 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T06:59:39.324707500Z]
25-04-05 15:59:39.338 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:VARCHAR) <- [test]
25-04-05 15:59:39.339 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (7:UUID) <- [ad68c91f-e9c8-4b85-8c22-a7186f05022d]
25-04-05 15:59:39.346 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.UserStatus */insert 
    into
        user_statuses (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-04-05 15:59:39.348 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T06:59:39.326270100Z]
25-04-05 15:59:39.349 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T06:59:39.325232600Z]
25-04-05 15:59:39.351 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:TIMESTAMP_UTC) <- [2025-04-05T06:59:39.326270100Z]
25-04-05 15:59:39.353 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [ad68c91f-e9c8-4b85-8c22-a7186f05022d]
25-04-05 15:59:39.354 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:UUID) <- [048082e5-6763-427e-85b1-e8a2e2bd2d49]
25-04-05 15:59:39.360 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        s1_0.id,
        s1_0.created_at,
        s1_0.last_active_at,
        s1_0.updated_at,
        s1_0.user_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        user_statuses s1_0 
            on u1_0.id=s1_0.user_id 
    where
        u1_0.id=?
25-04-05 15:59:39.365 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [ad68c91f-e9c8-4b85-8c22-a7186f05022d]
25-04-05 15:59:39.421 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.UserStatus */delete 
    from
        user_statuses 
    where
        id=?
25-04-05 15:59:39.422 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [048082e5-6763-427e-85b1-e8a2e2bd2d49]
25-04-05 15:59:39.434 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.User */delete 
    from
        users 
    where
        id=?
25-04-05 15:59:39.436 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [ad68c91f-e9c8-4b85-8c22-a7186f05022d]
25-04-05 15:59:39.450 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* <criteria> */ select
        us1_0.id,
        us1_0.created_at,
        us1_0.last_active_at,
        us1_0.updated_at,
        us1_0.user_id 
    from
        user_statuses us1_0
25-04-05 15:59:39.508 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 16:04:25.201 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 16:04:25.477 [Test worker] INFO  com.sprint.mission.discodeit.repository.ChannelRepositoryTest [ |  | ] - Starting ChannelRepositoryTest using Java 17.0.14 with PID 4444 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 16:04:25.490 [Test worker] INFO  com.sprint.mission.discodeit.repository.ChannelRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 16:04:27.231 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 16:04:27.870 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 565 ms. Found 6 JPA repository interfaces.
25-04-05 16:04:28.269 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 16:04:29.259 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:09dbe4d8-a6c0-4aa2-8b88-9ac8c0abe62f;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 16:04:32.157 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 16:04:32.644 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 16:04:32.946 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 16:04:35.471 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 16:04:36.206 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@5d643896']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 16:04:44.767 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 16:04:44.927 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 16:04:44.943 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 16:04:44.950 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 16:04:44.956 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 16:04:44.961 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 16:04:44.965 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 16:04:44.970 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 16:04:45.009 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 16:04:45.022 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 16:04:45.033 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 16:04:45.040 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 16:04:45.048 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 16:04:45.058 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 16:04:45.068 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 16:04:45.082 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 16:04:45.087 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 16:04:45.092 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 16:04:45.097 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 16:04:45.104 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 16:04:45.110 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 16:04:45.114 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 16:04:45.117 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 16:04:45.137 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 16:04:47.442 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 16:04:50.409 [Test worker] INFO  com.sprint.mission.discodeit.repository.ChannelRepositoryTest [ |  | ] - Started ChannelRepositoryTest in 28.394 seconds (process running for 31.795)
25-04-05 16:04:53.317 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.Channel */insert 
    into
        channels (created_at, description, name, type, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-04-05 16:04:53.353 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T07:04:52.660074900Z]
25-04-05 16:04:53.390 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [전체 공지]
25-04-05 16:04:53.391 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [공지사항]
25-04-05 16:04:53.392 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:ENUM) <- [PUBLIC]
25-04-05 16:04:53.393 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T07:04:52.660074900Z]
25-04-05 16:04:53.394 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:UUID) <- [7bac67ee-1862-4977-b437-9261f488ed5f]
25-04-05 16:04:53.470 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.Channel */insert 
    into
        channels (created_at, description, name, type, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-04-05 16:04:53.472 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T07:04:52.840818500Z]
25-04-05 16:04:53.474 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [잡담방]
25-04-05 16:04:53.475 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [자유채팅]
25-04-05 16:04:53.476 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:ENUM) <- [PUBLIC]
25-04-05 16:04:53.478 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T07:04:52.840818500Z]
25-04-05 16:04:53.480 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:UUID) <- [f3df224b-0379-4a7e-b24c-f593dd45a086]
25-04-05 16:04:53.482 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* insert for
        com.sprint.mission.discodeit.entity.Channel */insert 
    into
        channels (created_at, description, name, type, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-04-05 16:04:53.485 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:TIMESTAMP_UTC) <- [2025-04-05T07:04:52.842825400Z]
25-04-05 16:04:53.486 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:VARCHAR) <- [null]
25-04-05 16:04:53.487 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:VARCHAR) <- [null]
25-04-05 16:04:53.488 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:ENUM) <- [PRIVATE]
25-04-05 16:04:53.489 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:TIMESTAMP_UTC) <- [2025-04-05T07:04:52.842825400Z]
25-04-05 16:04:53.490 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:UUID) <- [e29cffb2-1264-4cbf-b5e0-37f8bbdb1b42]
25-04-05 16:04:53.553 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
25-04-05 16:04:53.559 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:ENUM) <- [PUBLIC]
25-04-05 16:04:53.560 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:UUID) <- [e29cffb2-1264-4cbf-b5e0-37f8bbdb1b42]
25-04-05 16:04:54.101 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 20:57:56.184 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 20:57:56.655 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Starting MessageRepositoryTest using Java 17.0.14 with PID 31452 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 20:57:56.659 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 20:57:59.382 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 20:58:00.085 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 629 ms. Found 6 JPA repository interfaces.
25-04-05 20:58:00.491 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 20:58:01.491 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:7bc6df23-18de-4586-bd01-88c30a8bfc05;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 20:58:04.165 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 20:58:04.763 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 20:58:05.098 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 20:58:07.764 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 20:58:08.474 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@79948bcf']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 20:58:17.980 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 20:58:18.136 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 20:58:18.163 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 20:58:18.166 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 20:58:18.170 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 20:58:18.171 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 20:58:18.173 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 20:58:18.177 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 20:58:18.215 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 20:58:18.259 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 20:58:18.273 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 20:58:18.284 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 20:58:18.290 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 20:58:18.297 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 20:58:18.301 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 20:58:18.315 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 20:58:18.419 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 20:58:18.426 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 20:58:18.431 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 20:58:18.436 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 20:58:18.442 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 20:58:18.447 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 20:58:18.452 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 20:58:18.468 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 20:58:20.506 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 20:58:24.499 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Started MessageRepositoryTest in 32.239 seconds (process running for 37.164)
25-04-05 20:58:24.709 [Test worker] WARN  org.springframework.test.context.TestContextManager [ |  | ] - Caught exception while invoking 'beforeTestMethod' callback on TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] for test method [void com.sprint.mission.discodeit.repository.MessageRepositoryTest.findAllByChannelIdWithAuthor_success()] and test instance [com.sprint.mission.discodeit.repository.MessageRepositoryTest@225b9cf3]
org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of class path resource [sql/message-data.sql]: INSERT INTO channels (id, name, description, type, created_at, updated_at) VALUES ('channel-uuid', 'Test Channel', '테스트 채널입니다.', 'PUBLIC', NOW(), NOW())
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.execute(ResourceDatabasePopulator.java:269)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$9(SqlScriptsTestExecutionListener.java:362)
	at org.springframework.transaction.support.TransactionOperations.lambda$executeWithoutResult$0(TransactionOperations.java:68)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.transaction.support.TransactionOperations.executeWithoutResult(TransactionOperations.java:67)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:362)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$4(SqlScriptsTestExecutionListener.java:274)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:274)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:221)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.beforeTestMethod(SqlScriptsTestExecutionListener.java:164)
	at org.springframework.test.context.TestContextManager.beforeTestMethod(TestContextManager.java:320)
	at org.springframework.test.context.junit.jupiter.SpringExtension.beforeEach(SpringExtension.java:237)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachCallbacks$3(TestMethodTestDescriptor.java:166)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$7(TestMethodTestDescriptor.java:202)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:202)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachCallbacks(TestMethodTestDescriptor.java:165)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:132)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy2/jdk.proxy2.$Proxy6.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'channel-uuid' (CHANNELS: ""ID"" UUID NOT NULL)"; SQL statement:
INSERT INTO channels (id, name, description, type, created_at, updated_at) VALUES ('channel-uuid', 'Test Channel', '테스트 채널입니다.', 'PUBLIC', NOW(), NOW()) [22018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:518)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.table.Column.getDataConversionError(Column.java:450)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:409)
	at org.h2.table.Table.convertInsertRow(Table.java:963)
	at org.h2.command.dml.Insert.insertRows(Insert.java:167)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:139)
	at org.h2.command.Command.executeUpdate(Command.java:304)
	at org.h2.command.Command.executeUpdate(Command.java:248)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:262)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 84 common frames omitted
Caused by: org.h2.message.DbException: Data conversion error converting "channel-uuid" [22018-232]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.value.ValueUuid.get(ValueUuid.java:134)
	at org.h2.value.Value.convertToUuid(Value.java:2486)
	at org.h2.value.Value.convertTo(Value.java:1206)
	at org.h2.value.Value.convertForAssignTo(Value.java:1118)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:406)
	... 94 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "channel-uuid" [22018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:518)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 101 common frames omitted
25-04-05 20:58:26.849 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:01:52.276 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 21:01:52.609 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Starting MessageRepositoryTest using Java 17.0.14 with PID 32388 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 21:01:52.612 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 21:01:55.101 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 21:01:55.858 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 691 ms. Found 6 JPA repository interfaces.
25-04-05 21:01:56.278 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 21:01:57.518 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:7d3b5c96-ae31-4dd6-a11f-099204d8a175;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 21:02:00.138 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 21:02:00.697 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 21:02:01.007 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 21:02:03.757 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 21:02:04.575 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@79948bcf']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 21:02:13.264 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 21:02:13.458 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 21:02:13.489 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 21:02:13.494 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 21:02:13.497 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 21:02:13.501 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 21:02:13.503 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 21:02:13.505 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 21:02:13.542 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 21:02:13.603 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 21:02:13.613 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 21:02:13.624 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 21:02:13.630 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 21:02:13.640 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 21:02:13.645 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 21:02:13.666 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 21:02:13.784 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 21:02:13.794 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 21:02:13.805 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 21:02:13.816 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 21:02:13.829 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 21:02:13.839 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 21:02:13.850 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 21:02:13.876 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:02:15.769 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 21:02:19.479 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Started MessageRepositoryTest in 30.304 seconds (process running for 34.432)
25-04-05 21:02:19.681 [Test worker] WARN  org.springframework.test.context.TestContextManager [ |  | ] - Caught exception while invoking 'beforeTestMethod' callback on TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] for test method [void com.sprint.mission.discodeit.repository.MessageRepositoryTest.findAllByChannelIdWithAuthor_success()] and test instance [com.sprint.mission.discodeit.repository.MessageRepositoryTest@897ff3a]
org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #4 of class path resource [sql/message-data.sql]: INSERT INTO messages (id, content, author_id, channel_id, created_at, updated_at) VALUES ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0001', 'Hello 1', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '20 minutes', NOW() - INTERVAL '20 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0002', 'Hello 2', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '19 minutes', NOW() - INTERVAL '19 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0003', 'Hello 3', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '18 minutes', NOW() - INTERVAL '18 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0004', 'Hello 4', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '17 minutes', NOW() - INTERVAL '17 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0005', 'Hello 5', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '16 minutes', NOW() - INTERVAL '16 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0006', 'Hello 6', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '15 minutes', NOW() - INTERVAL '15 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0007', 'Hello 7', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '14 minutes', NOW() - INTERVAL '14 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0008', 'Hello 8', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '13 minutes', NOW() - INTERVAL '13 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0009', 'Hello 9', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '12 minutes', NOW() - INTERVAL '12 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0010', 'Hello 10', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '11 minutes', NOW() - INTERVAL '11 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0011', 'Hello 11', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '10 minutes', NOW() - INTERVAL '10 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0012', 'Hello 12', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '9 minutes', NOW() - INTERVAL '9 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0013', 'Hello 13', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '8 minutes', NOW() - INTERVAL '8 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0014', 'Hello 14', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '7 minutes', NOW() - INTERVAL '7 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0015', 'Hello 15', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '6 minutes', NOW() - INTERVAL '6 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0016', 'Hello 16', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '5 minutes', NOW() - INTERVAL '5 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0017', 'Hello 17', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '4 minutes', NOW() - INTERVAL '4 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0018', 'Hello 18', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '3 minutes', NOW() - INTERVAL '3 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0019', 'Hello 19', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '2 minutes', NOW() - INTERVAL '2 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0020', 'Hello 20', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '1 minutes', NOW() - INTERVAL '1 minutes')
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.execute(ResourceDatabasePopulator.java:269)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$9(SqlScriptsTestExecutionListener.java:362)
	at org.springframework.transaction.support.TransactionOperations.lambda$executeWithoutResult$0(TransactionOperations.java:68)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.transaction.support.TransactionOperations.executeWithoutResult(TransactionOperations.java:67)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:362)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$4(SqlScriptsTestExecutionListener.java:274)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:274)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:221)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.beforeTestMethod(SqlScriptsTestExecutionListener.java:164)
	at org.springframework.test.context.TestContextManager.beforeTestMethod(TestContextManager.java:320)
	at org.springframework.test.context.junit.jupiter.SpringExtension.beforeEach(SpringExtension.java:237)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachCallbacks$3(TestMethodTestDescriptor.java:166)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$7(TestMethodTestDescriptor.java:202)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:202)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachCallbacks(TestMethodTestDescriptor.java:165)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:132)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy2/jdk.proxy2.$Proxy6.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.h2.jdbc.JdbcSQLDataException: Cannot parse "INTERVAL" constant "20 minutes"; SQL statement:
INSERT INTO messages (id, content, author_id, channel_id, created_at, updated_at) VALUES ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0001', 'Hello 1', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '20 minutes', NOW() - INTERVAL '20 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0002', 'Hello 2', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '19 minutes', NOW() - INTERVAL '19 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0003', 'Hello 3', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '18 minutes', NOW() - INTERVAL '18 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0004', 'Hello 4', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '17 minutes', NOW() - INTERVAL '17 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0005', 'Hello 5', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '16 minutes', NOW() - INTERVAL '16 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0006', 'Hello 6', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '15 minutes', NOW() - INTERVAL '15 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0007', 'Hello 7', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '14 minutes', NOW() - INTERVAL '14 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0008', 'Hello 8', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '13 minutes', NOW() - INTERVAL '13 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0009', 'Hello 9', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '12 minutes', NOW() - INTERVAL '12 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0010', 'Hello 10', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '11 minutes', NOW() - INTERVAL '11 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0011', 'Hello 11', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '10 minutes', NOW() - INTERVAL '10 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0012', 'Hello 12', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '9 minutes', NOW() - INTERVAL '9 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0013', 'Hello 13', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '8 minutes', NOW() - INTERVAL '8 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0014', 'Hello 14', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '7 minutes', NOW() - INTERVAL '7 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0015', 'Hello 15', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '6 minutes', NOW() - INTERVAL '6 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0016', 'Hello 16', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '5 minutes', NOW() - INTERVAL '5 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0017', 'Hello 17', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '4 minutes', NOW() - INTERVAL '4 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0018', 'Hello 18', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '3 minutes', NOW() - INTERVAL '3 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0019', 'Hello 19', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '2 minutes', NOW() - INTERVAL '2 minutes'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0020', 'Hello 20', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '1 minutes', NOW() - INTERVAL '1 minutes') [22007-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:518)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.command.Parser.readInterval(Parser.java:5368)
	at org.h2.command.Parser.readTermWithoutIdentifier(Parser.java:4964)
	at org.h2.command.Parser.readTerm(Parser.java:4828)
	at org.h2.command.Parser.readFactor(Parser.java:3323)
	at org.h2.command.Parser.readSum(Parser.java:3315)
	at org.h2.command.Parser.readConcat(Parser.java:3275)
	at org.h2.command.Parser.readCondition(Parser.java:3065)
	at org.h2.command.Parser.readExpression(Parser.java:2985)
	at org.h2.command.Parser.readExpressionOrDefault(Parser.java:2971)
	at org.h2.command.Parser.parseValuesForCommand(Parser.java:1685)
	at org.h2.command.Parser.parseInsert(Parser.java:1550)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 84 common frames omitted
Caused by: java.lang.NullPointerException: Cannot invoke "org.h2.value.TypeInfo.getValueType()" because "<local5>" is null
	at org.h2.command.Parser.readInterval(Parser.java:5362)
	... 104 common frames omitted
25-04-05 21:02:21.699 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:05:06.393 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 21:05:06.825 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Starting MessageRepositoryTest using Java 17.0.14 with PID 12208 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 21:05:06.829 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 21:05:08.954 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 21:05:37.992 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 21:05:38.403 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Starting MessageRepositoryTest using Java 17.0.14 with PID 8428 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 21:05:38.407 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 21:05:40.877 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 21:05:41.544 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 599 ms. Found 6 JPA repository interfaces.
25-04-05 21:05:41.929 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 21:05:42.949 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:435b5b9f-e5c2-4bbb-bd5a-d3ceaa79ef57;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 21:05:45.340 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 21:05:45.898 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 21:05:46.193 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 21:05:48.432 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 21:05:49.101 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@79948bcf']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 21:05:57.240 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 21:05:57.378 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 21:05:57.401 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 21:05:57.404 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 21:05:57.408 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 21:05:57.413 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 21:05:57.417 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 21:05:57.421 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 21:05:57.453 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 21:05:57.496 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 21:05:57.507 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 21:05:57.514 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 21:05:57.522 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 21:05:57.530 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 21:05:57.540 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 21:05:57.554 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 21:05:57.629 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 21:05:57.635 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 21:05:57.643 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 21:05:57.649 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 21:05:57.655 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 21:05:57.660 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 21:05:57.664 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 21:05:57.681 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:05:59.539 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 21:06:02.687 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Started MessageRepositoryTest in 27.639 seconds (process running for 31.503)
25-04-05 21:06:02.876 [Test worker] WARN  org.springframework.test.context.TestContextManager [ |  | ] - Caught exception while invoking 'beforeTestMethod' callback on TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] for test method [void com.sprint.mission.discodeit.repository.MessageRepositoryTest.findAllByChannelIdWithAuthor_success()] and test instance [com.sprint.mission.discodeit.repository.MessageRepositoryTest@3adcdbc0]
org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #4 of class path resource [sql/message-data.sql]: INSERT INTO messages (id, content, author_id, channel_id, created_at, updated_at) VALUES ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0001', 'Hello 1', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '20 minute', NOW() - INTERVAL '20 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0002', 'Hello 2', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '19 minute', NOW() - INTERVAL '19 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0003', 'Hello 3', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '18 minute', NOW() - INTERVAL '18 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0004', 'Hello 4', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '17 minute', NOW() - INTERVAL '17 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0005', 'Hello 5', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '16 minute', NOW() - INTERVAL '16 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0006', 'Hello 6', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '15 minute', NOW() - INTERVAL '15 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0007', 'Hello 7', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '14 minute', NOW() - INTERVAL '14 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0008', 'Hello 8', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '13 minute', NOW() - INTERVAL '13 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0009', 'Hello 9', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '12 minute', NOW() - INTERVAL '12 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0010', 'Hello 10', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '11 minute', NOW() - INTERVAL '11 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0011', 'Hello 11', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '10 minute', NOW() - INTERVAL '10 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0012', 'Hello 12', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '9 minute', NOW() - INTERVAL '9 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0013', 'Hello 13', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '8 minute', NOW() - INTERVAL '8 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0014', 'Hello 14', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '7 minute', NOW() - INTERVAL '7 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0015', 'Hello 15', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '6 minute', NOW() - INTERVAL '6 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0016', 'Hello 16', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '5 minute', NOW() - INTERVAL '5 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0017', 'Hello 17', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '4 minute', NOW() - INTERVAL '4 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0018', 'Hello 18', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '3 minute', NOW() - INTERVAL '3 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0019', 'Hello 19', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '2 minute', NOW() - INTERVAL '2 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0020', 'Hello 20', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '1 minute', NOW() - INTERVAL '1 minute')
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.execute(ResourceDatabasePopulator.java:269)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$9(SqlScriptsTestExecutionListener.java:362)
	at org.springframework.transaction.support.TransactionOperations.lambda$executeWithoutResult$0(TransactionOperations.java:68)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.transaction.support.TransactionOperations.executeWithoutResult(TransactionOperations.java:67)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:362)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$4(SqlScriptsTestExecutionListener.java:274)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:274)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:221)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.beforeTestMethod(SqlScriptsTestExecutionListener.java:164)
	at org.springframework.test.context.TestContextManager.beforeTestMethod(TestContextManager.java:320)
	at org.springframework.test.context.junit.jupiter.SpringExtension.beforeEach(SpringExtension.java:237)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachCallbacks$3(TestMethodTestDescriptor.java:166)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$7(TestMethodTestDescriptor.java:202)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:202)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachCallbacks(TestMethodTestDescriptor.java:165)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:132)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy2/jdk.proxy2.$Proxy6.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.h2.jdbc.JdbcSQLDataException: Cannot parse "INTERVAL" constant "20 minute"; SQL statement:
INSERT INTO messages (id, content, author_id, channel_id, created_at, updated_at) VALUES ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0001', 'Hello 1', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '20 minute', NOW() - INTERVAL '20 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0002', 'Hello 2', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '19 minute', NOW() - INTERVAL '19 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0003', 'Hello 3', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '18 minute', NOW() - INTERVAL '18 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0004', 'Hello 4', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '17 minute', NOW() - INTERVAL '17 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0005', 'Hello 5', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '16 minute', NOW() - INTERVAL '16 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0006', 'Hello 6', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '15 minute', NOW() - INTERVAL '15 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0007', 'Hello 7', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '14 minute', NOW() - INTERVAL '14 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0008', 'Hello 8', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '13 minute', NOW() - INTERVAL '13 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0009', 'Hello 9', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '12 minute', NOW() - INTERVAL '12 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0010', 'Hello 10', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '11 minute', NOW() - INTERVAL '11 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0011', 'Hello 11', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '10 minute', NOW() - INTERVAL '10 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0012', 'Hello 12', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '9 minute', NOW() - INTERVAL '9 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0013', 'Hello 13', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '8 minute', NOW() - INTERVAL '8 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0014', 'Hello 14', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '7 minute', NOW() - INTERVAL '7 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0015', 'Hello 15', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '6 minute', NOW() - INTERVAL '6 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0016', 'Hello 16', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '5 minute', NOW() - INTERVAL '5 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0017', 'Hello 17', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '4 minute', NOW() - INTERVAL '4 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0018', 'Hello 18', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '3 minute', NOW() - INTERVAL '3 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0019', 'Hello 19', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '2 minute', NOW() - INTERVAL '2 minute'), ('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0020', 'Hello 20', '22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', NOW() - INTERVAL '1 minute', NOW() - INTERVAL '1 minute') [22007-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:518)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.command.Parser.readInterval(Parser.java:5368)
	at org.h2.command.Parser.readTermWithoutIdentifier(Parser.java:4964)
	at org.h2.command.Parser.readTerm(Parser.java:4828)
	at org.h2.command.Parser.readFactor(Parser.java:3323)
	at org.h2.command.Parser.readSum(Parser.java:3315)
	at org.h2.command.Parser.readConcat(Parser.java:3275)
	at org.h2.command.Parser.readCondition(Parser.java:3065)
	at org.h2.command.Parser.readExpression(Parser.java:2985)
	at org.h2.command.Parser.readExpressionOrDefault(Parser.java:2971)
	at org.h2.command.Parser.parseValuesForCommand(Parser.java:1685)
	at org.h2.command.Parser.parseInsert(Parser.java:1550)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 84 common frames omitted
Caused by: java.lang.NullPointerException: Cannot invoke "org.h2.value.TypeInfo.getValueType()" because "<local5>" is null
	at org.h2.command.Parser.readInterval(Parser.java:5362)
	... 104 common frames omitted
25-04-05 21:06:04.748 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:08:32.080 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 21:08:32.539 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Starting MessageRepositoryTest using Java 17.0.14 with PID 28740 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 21:08:32.544 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 21:08:35.189 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 21:08:35.866 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 613 ms. Found 6 JPA repository interfaces.
25-04-05 21:08:36.239 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 21:08:37.437 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:70a3029f-f163-4791-9748-de28a0cf4fc5;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 21:08:40.089 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 21:08:40.659 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 21:08:40.988 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 21:08:43.720 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 21:08:44.525 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@4cd78959']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 21:08:53.503 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 21:08:53.665 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 21:08:53.696 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 21:08:53.699 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 21:08:53.703 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 21:08:53.705 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 21:08:53.708 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 21:08:53.711 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 21:08:53.755 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 21:08:53.806 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 21:08:53.818 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 21:08:53.828 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 21:08:53.836 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 21:08:53.846 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 21:08:53.857 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 21:08:53.879 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 21:08:53.984 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 21:08:53.993 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 21:08:53.999 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 21:08:54.007 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 21:08:54.013 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 21:08:54.020 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 21:08:54.026 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 21:08:54.056 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:08:56.473 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 21:08:59.708 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Started MessageRepositoryTest in 31.384 seconds (process running for 35.423)
25-04-05 21:09:02.371 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* SELECT
        m 
    FROM
        Message m 
    LEFT JOIN
        
    FETCH
        m.author a 
    JOIN
        
    FETCH
        a.status 
    LEFT JOIN
        
    FETCH
        a.profile 
    WHERE
        m.channel.id = :channelId 
        AND m.createdAt < :createdAt 
    order by
        m.createdAt desc */ select
            m1_0.id,
            a1_0.id,
            a1_0.created_at,
            a1_0.email,
            a1_0.password,
            p1_0.id,
            p1_0.content_type,
            p1_0.created_at,
            p1_0.file_name,
            p1_0.size,
            s1_0.id,
            s1_0.created_at,
            s1_0.last_active_at,
            s1_0.updated_at,
            s1_0.user_id,
            a1_0.updated_at,
            a1_0.username,
            m1_0.channel_id,
            m1_0.content,
            m1_0.created_at,
            m1_0.updated_at 
        from
            messages m1_0 
        left join
            users a1_0 
                on a1_0.id=m1_0.author_id 
        join
            user_statuses s1_0 
                on a1_0.id=s1_0.user_id 
        left join
            binary_contents p1_0 
                on p1_0.id=a1_0.profile_id 
        where
            m1_0.channel_id=? 
            and m1_0.created_at<? 
        order by
            m1_0.created_at desc 
        fetch
            first ? rows only
25-04-05 21:09:02.414 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [11111111-1111-1111-1111-111111111111]
25-04-05 21:09:02.446 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T11:54:01.753210100Z]
25-04-05 21:09:02.454 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:INTEGER) <- [6]
25-04-05 21:09:03.748 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:12:28.859 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 21:12:29.166 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Starting MessageRepositoryTest using Java 17.0.14 with PID 5780 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 21:12:29.169 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 21:12:31.361 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 21:12:32.112 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 699 ms. Found 6 JPA repository interfaces.
25-04-05 21:12:32.543 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 21:12:33.670 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:d64fc9b2-be02-4463-80b0-d7d1f27b60ce;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 21:12:36.346 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 21:12:36.851 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 21:12:37.201 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 21:12:39.797 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 21:12:40.595 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@51038633']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 21:12:49.063 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 21:12:49.221 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 21:12:49.248 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 21:12:49.251 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 21:12:49.256 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 21:12:49.259 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 21:12:49.263 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 21:12:49.268 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 21:12:49.313 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 21:12:49.374 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 21:12:49.385 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 21:12:49.396 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 21:12:49.403 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 21:12:49.413 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 21:12:49.421 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 21:12:49.440 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 21:12:49.540 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 21:12:49.549 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 21:12:49.556 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 21:12:49.561 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 21:12:49.569 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 21:12:49.575 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 21:12:49.580 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 21:12:49.603 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:12:51.707 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 21:12:54.837 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Started MessageRepositoryTest in 29.569 seconds (process running for 33.542)
25-04-05 21:12:57.513 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* SELECT
        m.createdAt 
    FROM
        Message m 
    WHERE
        m.channel.id = :channelId 
    ORDER BY
        m.createdAt DESC 
    LIMIT
        1 */ select
            m1_0.created_at 
        from
            messages m1_0 
        where
            m1_0.channel_id=? 
        order by
            m1_0.created_at desc 
        fetch
            first 1 rows only
25-04-05 21:12:57.533 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [11111111-1111-1111-1111-111111111111]
25-04-05 21:12:58.351 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:14:27.395 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 21:14:27.794 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Starting MessageRepositoryTest using Java 17.0.14 with PID 32144 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 21:14:27.798 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 21:14:29.773 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 21:14:30.447 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 627 ms. Found 6 JPA repository interfaces.
25-04-05 21:14:30.818 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 21:14:31.981 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:c5dafad8-583f-48f7-82ca-502f541be8aa;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 21:14:34.317 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 21:14:34.883 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 21:14:35.211 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 21:14:37.810 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 21:14:38.649 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@72ecb71d']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 21:14:47.014 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 21:14:47.166 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 21:14:47.195 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 21:14:47.199 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 21:14:47.203 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 21:14:47.205 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 21:14:47.208 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 21:14:47.211 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 21:14:47.256 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 21:14:47.317 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 21:14:47.330 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 21:14:47.340 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 21:14:47.348 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 21:14:47.358 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 21:14:47.366 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 21:14:47.387 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 21:14:47.499 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 21:14:47.511 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 21:14:47.521 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 21:14:47.532 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 21:14:47.541 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 21:14:47.551 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 21:14:47.558 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 21:14:47.584 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:14:49.864 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 21:14:53.179 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Started MessageRepositoryTest in 29.537 seconds (process running for 32.837)
25-04-05 21:14:55.783 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* <criteria> */ select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.content,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-04-05 21:14:55.810 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [11111111-1111-1111-1111-111111111111]
25-04-05 21:14:56.384 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    select
        a1_0.message_id,
        a1_1.id,
        a1_1.content_type,
        a1_1.created_at,
        a1_1.file_name,
        a1_1.size 
    from
        message_attachments a1_0 
    join
        binary_contents a1_1 
            on a1_1.id=a1_0.attachment_id 
    where
        a1_0.message_id in (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
25-04-05 21:14:56.408 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0001]
25-04-05 21:14:56.409 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0002]
25-04-05 21:14:56.411 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0003]
25-04-05 21:14:56.412 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (4:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0004]
25-04-05 21:14:56.413 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (5:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0005]
25-04-05 21:14:56.413 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (6:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0006]
25-04-05 21:14:56.414 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (7:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0007]
25-04-05 21:14:56.415 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (8:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0008]
25-04-05 21:14:56.417 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (9:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0009]
25-04-05 21:14:56.418 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (10:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0010]
25-04-05 21:14:56.419 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (11:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0011]
25-04-05 21:14:56.419 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (12:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0012]
25-04-05 21:14:56.420 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (13:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0013]
25-04-05 21:14:56.421 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (14:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0014]
25-04-05 21:14:56.422 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (15:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0015]
25-04-05 21:14:56.423 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (16:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0016]
25-04-05 21:14:56.423 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (17:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0017]
25-04-05 21:14:56.424 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (18:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0018]
25-04-05 21:14:56.425 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (19:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0019]
25-04-05 21:14:56.426 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (20:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0020]
25-04-05 21:14:56.427 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (21:UUID) <- [null]
25-04-05 21:14:56.428 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (22:UUID) <- [null]
25-04-05 21:14:56.429 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (23:UUID) <- [null]
25-04-05 21:14:56.430 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (24:UUID) <- [null]
25-04-05 21:14:56.431 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (25:UUID) <- [null]
25-04-05 21:14:56.433 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (26:UUID) <- [null]
25-04-05 21:14:56.434 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (27:UUID) <- [null]
25-04-05 21:14:56.434 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (28:UUID) <- [null]
25-04-05 21:14:56.435 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (29:UUID) <- [null]
25-04-05 21:14:56.436 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (30:UUID) <- [null]
25-04-05 21:14:56.436 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (31:UUID) <- [null]
25-04-05 21:14:56.437 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (32:UUID) <- [null]
25-04-05 21:14:56.438 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (33:UUID) <- [null]
25-04-05 21:14:56.438 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (34:UUID) <- [null]
25-04-05 21:14:56.439 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (35:UUID) <- [null]
25-04-05 21:14:56.440 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (36:UUID) <- [null]
25-04-05 21:14:56.441 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (37:UUID) <- [null]
25-04-05 21:14:56.441 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (38:UUID) <- [null]
25-04-05 21:14:56.443 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (39:UUID) <- [null]
25-04-05 21:14:56.443 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (40:UUID) <- [null]
25-04-05 21:14:56.444 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (41:UUID) <- [null]
25-04-05 21:14:56.445 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (42:UUID) <- [null]
25-04-05 21:14:56.446 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (43:UUID) <- [null]
25-04-05 21:14:56.447 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (44:UUID) <- [null]
25-04-05 21:14:56.448 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (45:UUID) <- [null]
25-04-05 21:14:56.448 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (46:UUID) <- [null]
25-04-05 21:14:56.449 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (47:UUID) <- [null]
25-04-05 21:14:56.450 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (48:UUID) <- [null]
25-04-05 21:14:56.450 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (49:UUID) <- [null]
25-04-05 21:14:56.452 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (50:UUID) <- [null]
25-04-05 21:14:56.453 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (51:UUID) <- [null]
25-04-05 21:14:56.454 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (52:UUID) <- [null]
25-04-05 21:14:56.455 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (53:UUID) <- [null]
25-04-05 21:14:56.456 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (54:UUID) <- [null]
25-04-05 21:14:56.457 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (55:UUID) <- [null]
25-04-05 21:14:56.458 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (56:UUID) <- [null]
25-04-05 21:14:56.459 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (57:UUID) <- [null]
25-04-05 21:14:56.460 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (58:UUID) <- [null]
25-04-05 21:14:56.461 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (59:UUID) <- [null]
25-04-05 21:14:56.462 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (60:UUID) <- [null]
25-04-05 21:14:56.463 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (61:UUID) <- [null]
25-04-05 21:14:56.464 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (62:UUID) <- [null]
25-04-05 21:14:56.465 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (63:UUID) <- [null]
25-04-05 21:14:56.466 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (64:UUID) <- [null]
25-04-05 21:14:56.467 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (65:UUID) <- [null]
25-04-05 21:14:56.467 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (66:UUID) <- [null]
25-04-05 21:14:56.468 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (67:UUID) <- [null]
25-04-05 21:14:56.469 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (68:UUID) <- [null]
25-04-05 21:14:56.470 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (69:UUID) <- [null]
25-04-05 21:14:56.470 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (70:UUID) <- [null]
25-04-05 21:14:56.471 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (71:UUID) <- [null]
25-04-05 21:14:56.472 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (72:UUID) <- [null]
25-04-05 21:14:56.473 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (73:UUID) <- [null]
25-04-05 21:14:56.473 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (74:UUID) <- [null]
25-04-05 21:14:56.474 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (75:UUID) <- [null]
25-04-05 21:14:56.475 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (76:UUID) <- [null]
25-04-05 21:14:56.476 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (77:UUID) <- [null]
25-04-05 21:14:56.477 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (78:UUID) <- [null]
25-04-05 21:14:56.477 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (79:UUID) <- [null]
25-04-05 21:14:56.477 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (80:UUID) <- [null]
25-04-05 21:14:56.478 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (81:UUID) <- [null]
25-04-05 21:14:56.479 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (82:UUID) <- [null]
25-04-05 21:14:56.480 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (83:UUID) <- [null]
25-04-05 21:14:56.481 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (84:UUID) <- [null]
25-04-05 21:14:56.481 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (85:UUID) <- [null]
25-04-05 21:14:56.483 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (86:UUID) <- [null]
25-04-05 21:14:56.484 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (87:UUID) <- [null]
25-04-05 21:14:56.485 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (88:UUID) <- [null]
25-04-05 21:14:56.486 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (89:UUID) <- [null]
25-04-05 21:14:56.486 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (90:UUID) <- [null]
25-04-05 21:14:56.487 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (91:UUID) <- [null]
25-04-05 21:14:56.488 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (92:UUID) <- [null]
25-04-05 21:14:56.488 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (93:UUID) <- [null]
25-04-05 21:14:56.489 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (94:UUID) <- [null]
25-04-05 21:14:56.490 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (95:UUID) <- [null]
25-04-05 21:14:56.491 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (96:UUID) <- [null]
25-04-05 21:14:56.491 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (97:UUID) <- [null]
25-04-05 21:14:56.493 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (98:UUID) <- [null]
25-04-05 21:14:56.493 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (99:UUID) <- [null]
25-04-05 21:14:56.494 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (100:UUID) <- [null]
25-04-05 21:14:56.774 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.779 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0001]
25-04-05 21:14:56.798 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.800 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0002]
25-04-05 21:14:56.803 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.805 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0003]
25-04-05 21:14:56.808 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.811 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0004]
25-04-05 21:14:56.816 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.818 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0005]
25-04-05 21:14:56.821 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.823 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0006]
25-04-05 21:14:56.826 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.828 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0007]
25-04-05 21:14:56.833 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.833 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0008]
25-04-05 21:14:56.837 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.838 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0009]
25-04-05 21:14:56.842 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.843 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0010]
25-04-05 21:14:56.845 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.847 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0011]
25-04-05 21:14:56.850 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.851 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0012]
25-04-05 21:14:56.853 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.855 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0013]
25-04-05 21:14:56.858 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.859 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0014]
25-04-05 21:14:56.861 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.863 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0015]
25-04-05 21:14:56.866 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.867 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0016]
25-04-05 21:14:56.869 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.870 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0017]
25-04-05 21:14:56.871 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.871 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0018]
25-04-05 21:14:56.874 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.874 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0019]
25-04-05 21:14:56.875 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* delete for com.sprint.mission.discodeit.entity.Message */delete 
    from
        messages 
    where
        id=?
25-04-05 21:14:56.876 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0020]
25-04-05 21:14:56.878 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* <criteria> */ select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.content,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0
25-04-05 21:14:57.519 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:15:22.467 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 21:15:22.891 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Starting MessageRepositoryTest using Java 17.0.14 with PID 29392 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 21:15:22.895 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 21:15:25.243 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 21:15:25.983 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 673 ms. Found 6 JPA repository interfaces.
25-04-05 21:15:26.375 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 21:15:27.491 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:4fcf2720-395d-44e1-8e2b-ebf9b774451b;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 21:15:30.134 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 21:15:30.614 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 21:15:30.890 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 21:15:33.544 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 21:15:34.335 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@12e37ab2']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 21:15:43.310 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 21:15:43.474 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 21:15:43.503 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 21:15:43.505 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 21:15:43.509 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 21:15:43.511 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 21:15:43.513 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 21:15:43.516 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 21:15:43.556 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 21:15:43.615 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 21:15:43.629 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 21:15:43.639 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 21:15:43.649 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 21:15:43.662 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 21:15:43.671 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 21:15:43.691 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 21:15:43.805 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 21:15:43.814 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 21:15:43.823 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 21:15:43.829 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 21:15:43.840 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 21:15:43.845 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 21:15:43.853 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 21:15:43.885 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:15:46.181 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 21:15:49.398 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Started MessageRepositoryTest in 30.611 seconds (process running for 33.872)
25-04-05 21:15:51.970 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* SELECT
        m.createdAt 
    FROM
        Message m 
    WHERE
        m.channel.id = :channelId 
    ORDER BY
        m.createdAt DESC 
    LIMIT
        1 */ select
            m1_0.created_at 
        from
            messages m1_0 
        where
            m1_0.channel_id=? 
        order by
            m1_0.created_at desc 
        fetch
            first 1 rows only
25-04-05 21:15:52.002 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [11111111-1111-1111-1111-111111111111]
25-04-05 21:15:52.875 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:18:15.061 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 21:18:15.448 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Starting MessageRepositoryTest using Java 17.0.14 with PID 17644 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 21:18:15.452 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 21:18:17.737 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 21:18:18.427 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 622 ms. Found 6 JPA repository interfaces.
25-04-05 21:18:18.795 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 21:18:19.920 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:06ec7306-84a2-4049-ac44-f7ef2ace14a7;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 21:18:22.447 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 21:18:23.007 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 21:18:23.345 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 21:18:25.951 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 21:18:26.801 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@72ecb71d']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 21:18:35.201 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 21:18:35.359 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 21:18:35.388 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 21:18:35.391 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 21:18:35.394 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 21:18:35.397 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 21:18:35.401 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 21:18:35.404 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 21:18:35.438 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 21:18:35.498 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 21:18:35.510 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 21:18:35.521 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 21:18:35.529 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 21:18:35.538 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 21:18:35.546 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 21:18:35.563 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 21:18:35.657 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 21:18:35.664 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 21:18:35.671 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 21:18:35.678 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 21:18:35.683 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 21:18:35.690 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 21:18:35.697 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 21:18:35.724 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:18:37.611 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 21:18:41.430 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Started MessageRepositoryTest in 30.074 seconds (process running for 33.442)
25-04-05 21:18:43.869 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.content,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.id=?
25-04-05 21:18:43.897 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa0020]
25-04-05 21:18:44.706 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* SELECT
        m.createdAt 
    FROM
        Message m 
    WHERE
        m.channel.id = :channelId 
    ORDER BY
        m.createdAt DESC 
    LIMIT
        1 */ select
            m1_0.created_at 
        from
            messages m1_0 
        where
            m1_0.channel_id=? 
        order by
            m1_0.created_at desc 
        fetch
            first 1 rows only
25-04-05 21:18:44.713 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [11111111-1111-1111-1111-111111111111]
25-04-05 21:18:45.356 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:20:47.709 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 21:20:48.070 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Starting MessageRepositoryTest using Java 17.0.14 with PID 32784 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 21:20:48.073 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 21:20:50.271 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-04-05 21:20:50.750 [Test worker] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [ |  | ] - Finished Spring Data repository scanning in 444 ms. Found 6 JPA repository interfaces.
25-04-05 21:20:50.979 [Test worker] INFO  org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [ |  | ] - Replacing 'dataSource' DataSource bean with embedded version
25-04-05 21:20:51.751 [Test worker] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [ |  | ] - Starting embedded database: url='jdbc:h2:mem:b8fa489b-499c-4383-97ed-50a9eab24ef1;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-04-05 21:20:54.151 [Test worker] INFO  org.hibernate.jpa.internal.util.LogHelper [ |  | ] - HHH000204: Processing PersistenceUnitInfo [name: default]
25-04-05 21:20:54.626 [Test worker] INFO  org.hibernate.Version                [ |  | ] - HHH000412: Hibernate ORM core version 6.6.2.Final
25-04-05 21:20:54.863 [Test worker] INFO  org.hibernate.cache.internal.RegionFactoryInitiator [ |  | ] - HHH000026: Second-level cache disabled
25-04-05 21:20:57.528 [Test worker] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [ |  | ] - No LoadTimeWeaver setup: ignoring JPA class transformer
25-04-05 21:20:58.194 [Test worker] INFO  org.hibernate.orm.connections.pooling [ |  | ] - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@f5d20d8']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-04-05 21:21:06.266 [Test worker] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [ |  | ] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-04-05 21:21:06.419 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists binary_contents cascade 
25-04-05 21:21:06.448 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists channels cascade 
25-04-05 21:21:06.452 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists message_attachments cascade 
25-04-05 21:21:06.453 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists messages cascade 
25-04-05 21:21:06.456 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists read_statuses cascade 
25-04-05 21:21:06.459 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists user_statuses cascade 
25-04-05 21:21:06.462 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    drop table if exists users cascade 
25-04-05 21:21:06.499 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(255) not null,
        primary key (id)
    )
25-04-05 21:21:06.548 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-04-05 21:21:06.557 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-04-05 21:21:06.565 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
25-04-05 21:21:06.571 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id),
        unique (user_id, channel_id)
    )
25-04-05 21:21:06.577 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-04-05 21:21:06.583 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
25-04-05 21:21:06.593 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-04-05 21:21:06.668 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-04-05 21:21:06.676 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-04-05 21:21:06.683 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-04-05 21:21:06.691 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-04-05 21:21:06.697 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-04-05 21:21:06.704 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-04-05 21:21:06.710 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-04-05 21:21:06.732 [Test worker] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-04-05 21:21:08.937 [Test worker] INFO  org.springframework.data.jpa.repository.query.QueryEnhancerFactory [ |  | ] - Hibernate is in classpath; If applicable, HQL parser will be used.
25-04-05 21:21:11.790 [Test worker] INFO  com.sprint.mission.discodeit.repository.MessageRepositoryTest [ |  | ] - Started MessageRepositoryTest in 27.268 seconds (process running for 31.291)
25-04-05 21:21:14.233 [Test worker] DEBUG org.hibernate.SQL                    [ |  | ] - 
    /* SELECT
        m 
    FROM
        Message m 
    LEFT JOIN
        
    FETCH
        m.author a 
    JOIN
        
    FETCH
        a.status 
    LEFT JOIN
        
    FETCH
        a.profile 
    WHERE
        m.channel.id = :channelId 
        AND m.createdAt < :createdAt 
    order by
        m.createdAt desc */ select
            m1_0.id,
            a1_0.id,
            a1_0.created_at,
            a1_0.email,
            a1_0.password,
            p1_0.id,
            p1_0.content_type,
            p1_0.created_at,
            p1_0.file_name,
            p1_0.size,
            s1_0.id,
            s1_0.created_at,
            s1_0.last_active_at,
            s1_0.updated_at,
            s1_0.user_id,
            a1_0.updated_at,
            a1_0.username,
            m1_0.channel_id,
            m1_0.content,
            m1_0.created_at,
            m1_0.updated_at 
        from
            messages m1_0 
        left join
            users a1_0 
                on a1_0.id=m1_0.author_id 
        join
            user_statuses s1_0 
                on a1_0.id=s1_0.user_id 
        left join
            binary_contents p1_0 
                on p1_0.id=a1_0.profile_id 
        where
            m1_0.channel_id=? 
            and m1_0.created_at<? 
        order by
            m1_0.created_at desc 
        fetch
            first ? rows only
25-04-05 21:21:14.270 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (1:UUID) <- [11111111-1111-1111-1111-111111111111]
25-04-05 21:21:14.303 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (2:TIMESTAMP_UTC) <- [2025-04-05T12:06:13.734114100Z]
25-04-05 21:21:14.310 [Test worker] TRACE org.hibernate.orm.jdbc.bind          [ |  | ] - binding parameter (3:INTEGER) <- [6]
25-04-05 21:21:15.465 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [ |  | ] - Closing JPA EntityManagerFactory for persistence unit 'default'
25-04-05 23:18:49.271 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 23:18:49.719 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - Starting UserControllerTest using Java 17.0.14 with PID 24476 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 23:18:49.723 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 23:18:59.576 [Test worker] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping [ |  | ] - Adding welcome page: class path resource [static/index.html]
25-04-05 23:19:01.509 [Test worker] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [ |  | ] - Initializing Spring TestDispatcherServlet ''
25-04-05 23:19:01.511 [Test worker] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [ |  | ] - Initializing Servlet ''
25-04-05 23:19:01.515 [Test worker] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [ |  | ] - Completed initialization in 2 ms
25-04-05 23:19:01.694 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - Started UserControllerTest in 16.285 seconds (process running for 20.059)
25-04-05 23:20:35.236 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 23:20:35.628 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - Starting UserControllerTest using Java 17.0.14 with PID 32512 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 23:20:35.632 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 23:20:44.984 [Test worker] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping [ |  | ] - Adding welcome page: class path resource [static/index.html]
25-04-05 23:20:46.855 [Test worker] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [ |  | ] - Initializing Spring TestDispatcherServlet ''
25-04-05 23:20:46.856 [Test worker] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [ |  | ] - Initializing Servlet ''
25-04-05 23:20:46.862 [Test worker] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [ |  | ] - Completed initialization in 5 ms
25-04-05 23:20:47.000 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - Started UserControllerTest in 15.103 seconds (process running for 18.709)
25-04-05 23:22:24.353 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 23:22:24.771 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - Starting UserControllerTest using Java 17.0.14 with PID 17968 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 23:22:24.776 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 23:22:34.114 [Test worker] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping [ |  | ] - Adding welcome page: class path resource [static/index.html]
25-04-05 23:22:35.857 [Test worker] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [ |  | ] - Initializing Spring TestDispatcherServlet ''
25-04-05 23:22:35.858 [Test worker] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [ |  | ] - Initializing Servlet ''
25-04-05 23:22:35.862 [Test worker] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [ |  | ] - Completed initialization in 3 ms
25-04-05 23:22:35.985 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - Started UserControllerTest in 15.302 seconds (process running for 19.21)
25-04-05 23:22:54.758 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 23:22:55.079 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - Starting UserControllerTest using Java 17.0.14 with PID 20196 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 23:22:55.081 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 23:23:04.228 [Test worker] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping [ |  | ] - Adding welcome page: class path resource [static/index.html]
25-04-05 23:23:05.825 [Test worker] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [ |  | ] - Initializing Spring TestDispatcherServlet ''
25-04-05 23:23:05.826 [Test worker] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [ |  | ] - Initializing Servlet ''
25-04-05 23:23:05.831 [Test worker] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [ |  | ] - Completed initialization in 4 ms
25-04-05 23:23:05.977 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - Started UserControllerTest in 14.36 seconds (process running for 18.575)
25-04-05 23:25:38.752 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 23:25:39.093 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - Starting UserControllerTest using Java 17.0.14 with PID 22488 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 23:25:39.098 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 23:25:48.665 [Test worker] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping [ |  | ] - Adding welcome page: class path resource [static/index.html]
25-04-05 23:25:50.707 [Test worker] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [ |  | ] - Initializing Spring TestDispatcherServlet ''
25-04-05 23:25:50.708 [Test worker] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [ |  | ] - Initializing Servlet ''
25-04-05 23:25:50.714 [Test worker] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [ |  | ] - Completed initialization in 6 ms
25-04-05 23:25:50.866 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - Started UserControllerTest in 15.57 seconds (process running for 20.22)
25-04-05 23:27:25.394 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 23:27:25.784 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - Starting UserControllerTest using Java 17.0.14 with PID 21712 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 23:27:25.786 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 23:27:34.955 [Test worker] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping [ |  | ] - Adding welcome page: class path resource [static/index.html]
25-04-05 23:27:36.722 [Test worker] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [ |  | ] - Initializing Spring TestDispatcherServlet ''
25-04-05 23:27:36.722 [Test worker] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [ |  | ] - Initializing Servlet ''
25-04-05 23:27:36.727 [Test worker] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [ |  | ] - Completed initialization in 4 ms
25-04-05 23:27:36.887 [Test worker] INFO  com.sprint.mission.discodeit.controller.UserControllerTest [ |  | ] - Started UserControllerTest in 14.729 seconds (process running for 19.224)
25-04-05 23:59:17.811 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [ |  | ] - HV000001: Hibernate Validator 8.0.1.Final
25-04-05 23:59:18.066 [Test worker] INFO  com.sprint.mission.discodeit.controller.ChannelControllerTest [ |  | ] - Starting ChannelControllerTest using Java 17.0.14 with PID 30696 (started by junwo in C:\Users\junwo\IdeaProjects\1-sprint-mission)
25-04-05 23:59:18.068 [Test worker] INFO  com.sprint.mission.discodeit.controller.ChannelControllerTest [ |  | ] - The following 1 profile is active: "dev"
25-04-05 23:59:26.412 [Test worker] INFO  org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping [ |  | ] - Adding welcome page: class path resource [static/index.html]
25-04-05 23:59:28.302 [Test worker] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [ |  | ] - Initializing Spring TestDispatcherServlet ''
25-04-05 23:59:28.303 [Test worker] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [ |  | ] - Initializing Servlet ''
25-04-05 23:59:28.308 [Test worker] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [ |  | ] - Completed initialization in 4 ms
25-04-05 23:59:28.463 [Test worker] INFO  com.sprint.mission.discodeit.controller.ChannelControllerTest [ |  | ] - Started ChannelControllerTest in 13.821 seconds (process running for 18.477)
